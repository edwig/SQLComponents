RELEASENOTES SQLCOMPONENTS VERSION 2.0
======================================
===== Released since: 20-03-2022 =====
======================================

Version 2.0.6 of 31-10-2022
---------------------------
1) Tested Oracle to MS-SQLServer conversion in the Migrate program
   Added various enhancements to be able to convert tables, index, primary and foreign keys
   and convert data at least in the tradtional select/insert cycle.
2) Added JSONPath filters
3) Added XStringBuilder
4) Fixes for EventLogRegistration and ServiceReporting

Version 2.0.5 of 29-9-2022
--------------------------
1) Upgraded the BaseLibrary to the Code Analysis version
2) Ran Code Analysis with the standard "Microsoft Native Ruleset" and corrected many
   little bugs and quirks.

Version 2.0.4 of 24-07-2022
---------------------------
1)  Upgraded to version 1.0.4 of the BaseLibrary
2)  Added the possibility to have an empty SQLFilter() with just one AddExpression(expression)
    to be parsed to SQL in the SQLDataSet.

Version 2.0.3 of 16-06-2022
---------------------------
1)  Added a new class: SQLPrimaryKey
    Names of the columns and values of the columns are retained
    Create a search (where) condition of the primary key and retains a database status.
2)  Added the capability to register a cancellation function on the DataSet, so a 
    program's thread can call ::SQLCancel() on the statement handle
3)  Added a '=' operator to the SQLPrimaryKey
4)  Added a CAST operator to the SQLFilter
5)  Added the storage of datatypes in XML for a DataSet if no records found

Version 2.0.2 of 25-04-2022
---------------------------
1)  When creating an SQLTimestamp from a scanned string, this class wil now recognize 
    a string with an UTC time ending in 'Z'. Correcting the time from UTC to the current
    local time.
2)  AutoDBS has an extra option to pass on an already existing SQLDatabase connection,
    or requesting a new one from the database pool.

Version 2.0.1 of 29-03-2022
---------------------------
1)  Fixed an ISO8601 bug in SQLTimestamp::AsString<XXX> methods.
2)  Fixed timestamp string scanning of the fractional part. Timestamp from strings with a 
    fractional part now get correctly converted to a SQLTimestamp again.
3)  Extended SQLRecord to accomodate CXHibernate (https://github.com/edwig/cxhibernate)
4)  Fixes for BaseLibrary (https://github.com/edwig/baselibrary)

Version 2.0.0 of 20-03-2022
---------------------------
1)  Now inlcuded the "BaseLibrary" (https://github.com/edwig/BaseLibrary) into the
    SQLComponents library. This moves out all the duplicated classes like XMLMessage
    and all other dependencies. So that the need not resynced over-and-over.
2)  All projects in the Visual Studio solution explorer now have a 'Configuraiton' filter
    containing the windows-sdk-version and MFC inclusions.
3)  All use of CString has been converted to XString
4)  These actions clear the way to be using SQLComponents in the future free of MFC in
    server-only environments where COW (Copy-On-Write) behaviour of CStrings is in the way
    of clear multi-threaded program use and performance.