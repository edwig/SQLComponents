RELEASENOTES SQLCOMPONENTS VERSION 1.7
======================================
===== Released since: 16-08-2020 =====
======================================

Version 1.7.3 of 21-07-2021
---------------------------
1) Added a global function to preset session global statements. This function is:
   bool SQLSetSessionInitialisation(DatabaseType p_type,int p_number,const char* p_statement);
   Now inside the "SQLDatabase.Open()" all the SQL statements for this database type 
   will be called, so that all sessions start with the same initialisation statements.
   Currently meant to be used to set the "NLS_SETTINGS" in Oracle.

   In the current implementation you can set a maximum of 10 statements for each database
   implementation. All SQL statements that you pass must be "const char*" statements that
   have a guaranteed lifetime throughout your program.

Version 1.7.2 of 01-01-2021
---------------------------
1) Copyrights bumped to the year 2021

Version 1.7.1 of 31-12-2020
---------------------------
1) Various bugs and enhancements for the MariaDB database.
   Discovery of SQLColumns and SQLSequences has been corrected and expanded
   Columns of tables in different schema's can now be found.
   Sequences of a table can now directly be found through a new SequenceAttributes function.
   Added extra reserved keywords for the MariaDB database in Oracle mode

Version 1.7.0 of 16-08-2020
---------------------------
1) Added a SQL Migration wizard to migrate the database contents from a source database
   to a target database of a different brand. Currently supported databases are:
   MS-Access, Firebird, Informix, MariaDB, MySQL, Oracle, PostgreSQL, MS-SQLServer
   From these databases the following are migrated
   - Tables and columns including datatypes
   - Primary keys
   - Indices
   - Foreign keys
   - Sequences (if applicable)
   - Views
   - Access rights
   If the migration goes between databases of the same brand, also table triggers are supported

   PLEASE BE ADVISED:
   Although the program has been in-use for more than 15 years, no conversion or migration 
   that we have seen was without program changes. It stays a work-in-progress. Expect to do
   some programming to get a near-perfect result.

2) Lots of extra methods have been added to the SQLInfoDB derived classes.
3) SQLQuery has been expanded to support better data pumping from one database to another.
4) The DDLCreateTable class is now used in the SQLMigrate program. It has been largely enhanced.
 